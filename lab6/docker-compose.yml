services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: archdb
      POSTGRES_DB: ozon_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: pass
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_KRAFT_CLUSTER_ID: "dh6khitPSDGZSBOjNeTC_g"
    volumes:
      - kafka_volume:/bitnami/kafka

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.4.0
    container_name: kafka-ui
    ports:
      - "8888:8080"
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_CLUSTERS_0_NAME: "kraft"
    depends_on:
      - kafka

  app:
    build: .
    container_name: fastapi_server
    ports:
      - "8000:8000"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: archdb
      POSTGRES_DB: ozon_db
      SQLALCHEMY_DATABASE_URL: postgresql://postgres:archdb@db/ozon_db
      MONGO_URI: mongodb://root:pass@mongo:27017/
      REDIS_URL: redis://redis:6379/
      KAFKA_BOOTSTRAP_SERVERS: kafka1:9092
    depends_on:
      - db
      - mongo
      - redis
      - kafka
    command: >
      sh -c "sleep 10 && python init_db_mongo.py && python init_db_pg.py && uvicorn jwt:app --host 0.0.0.0 --port 8000"
    volumes:
      - .:/app

volumes:
  postgres_data:
  mongo_data:
  kafka_volume:
